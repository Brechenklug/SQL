--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);

--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;

--First, I determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--What are the top 10 songs in this Spotify list by popularity?
SELECT track_name, artist_name, popularity 
FROM BIT_DB.Spotifydata 
ORDER BY popularity desc
LIMIT 10;

--What are the 3 longest songs on the list in seconds? (What artist released the longest song?)
SELECT track_name, artist_name, duration_ms/1000 as duration
FROM BIT_DB.Spotifydata
ORDER by duration desc
LIMIT 3;
--What are the 3 shortest songs on the list in seconds?
SELECT track_name, artist_name, duration_ms/1000 as duration
FROM BIT_DB.Spotifydata
ORDER by duration asc
LIMIT 3;

--What is the loudest and quietest song on the list?
SELECT track_name, artist_name, loudness
FROM BIT_DB.Spotifydata
ORDER by loudness desc
LIMIT 1;
SELECT track_name, artist_name, loudness
FROM BIT_DB.Spotifydata
ORDER by loudness asc
LIMIT 1;

--What's the average dancibility for the 10 most popular songs?
SELECT track_name, artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER by popularity desc
LIMIT 10;

--What songs are most likely to be rapping rather than singing?
SELECT track_name, artist_name, speechiness
FROM BIT_DB.Spotifydata
ORDER BY speechiness desc
LIMIT 3;

--What is the fastest and slowest song in the data table?
SELECT track_name, artist_name, tempo
FROM BIT_DB.Spotifydata
ORDER by tempo desc
LIMIT 1;
SELECT track_name, artist_name, tempo
FROM BIT_DB.Spotifydata
ORDER by tempo asc
LIMIT 1;

--What song is the most energetic?
SELECT track_name, artist_name, energy
FROM BIT_DB.Spotifydata
ORDER by energy desc
LIMIT 1;
